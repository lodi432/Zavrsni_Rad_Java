/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */





package glavacevic.view;


import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import org.pushingpixels.trident.Timeline;
import java.awt.AlphaComposite;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.MouseInfo;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;

import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.JTree;
import javax.swing.RepaintManager;
import javax.swing.SwingUtilities;
import jcMousePanel.jcMousePanel;
import org.pushingpixels.trident.ease.Spline;
import static glavacevic.view.FramePostavke.MotherBoard;
/**
 *
 * @author MacaZekoMi≈°
 */
public class PocetniPanel extends javax.swing.JPanel {

  
    
    static {
        RepaintManager.setCurrentManager(new RepaintManager() {
            @Override
            public void addDirtyRegion(
                    JComponent c, int x, int y, int w, int h) {
                Component cc = c;
                while (cc != null) {
                    if (cc instanceof JSlider) {
                        JSlider p = (JSlider) cc;
                        super.addDirtyRegion(
                                p, 0, 0, p.getWidth(), p.getHeight());
                    }
                    cc = cc.getParent();
                }
                super.addDirtyRegion(c, x, y, w, h);
            }
        });
    }
    private float opacity = 1.0f;
    private float opacity2 = 1.0f;
    private BufferedImage image;
        
    /**
     * Creates new form PocetniPanel
     */
    public PocetniPanel() {
        
        setOpacity(0.75f);
       
        initComponents();
         
       

    }
    
    
  
    
    
    
    
      public Timeline publicTimeLine;
         private Timeline fadeInTimeLine, fadeOutTimeLine;
 
    
    
    public void setOpacity(float opacity) {
        this.opacity = Math.max(0.0f, Math.min(1.0f, opacity));
        repaint();
    }

    private void updateImage() {
        int w = Math.min(1, getWidth());
        int h = Math.min(1, getHeight());
        if (image == null || image.getWidth() != w || image.getHeight() != h) {
            image = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);
        }
        Graphics2D g = image.createGraphics();
        g.setColor(new Color(0, 0, 0, 0));
        g.setComposite(AlphaComposite.SrcOver);
        g.fillRect(0, 0, w, h);
        g.dispose();
    }

    @Override
    protected void paintComponent(Graphics gr) {
        updateImage();
        Graphics2D imageGraphics = image.createGraphics();
        super.paintComponent(imageGraphics);
        imageGraphics.dispose();

        Graphics2D g = (Graphics2D) gr;
        g.setComposite(AlphaComposite.getInstance(
                AlphaComposite.SRC_OVER, opacity));
        g.drawImage(image, 0, 0, null);
    }

    
    
    
//    public void razvali(keeptoo.KGradientPanel panel){
//    
//        fadeInTimeLine = new Timeline(this);
//        fadeInTimeLine.addPropertyToInterpolate("Opacity", 0.85f, 1.0f);
//        fadeInTimeLine.setDuration(400);
//        fadeInTimeLine.play();
//        System.out.println(this);
//}
    public void razvali(JLabel panel){
    
        fadeInTimeLine = new Timeline(this);
        fadeInTimeLine.addPropertyToInterpolate("Opacity", 0.85f, 1.0f);
        fadeInTimeLine.setDuration(400);
        fadeInTimeLine.play();
        System.out.println(this);
}
    
       void razvali2(JLabel panel){
    
        fadeInTimeLine = new Timeline(this);
        fadeInTimeLine.addPropertyToInterpolate("Opacity", 1.0f, 0.75f);
        fadeInTimeLine.setDuration(400);
        fadeInTimeLine.play();
        System.out.println(this);
}
//      s
         void mmas(){
             fadeInTimeLine = new Timeline(this);
        fadeInTimeLine.addPropertyToInterpolate("Opacity", 0.5f, 1.0f);
        fadeInTimeLine.setDuration(400);
        fadeInTimeLine.play();
        System.out.println(this);
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setOpaque(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
